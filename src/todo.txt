Запуск:

npm start // клиент
node server // сервер

---

Веб приложение представляет из себя обычный чат — упрощенный коллективный мессенджер. В нем отсутствует большая часть функционала настоящего чата, но сохранены базовые возможности — отправка и получение сообщений. Но в тоже время, к примеру, отсутствует авторизация по связке логин-пароль. 

Рассмотрим список задач и тот стек технологий, который мы бы хотели, чтобы вы использовали при создании приложения.
Требования к функционалу: дополнение про объем

[done] •	доступ в чат осуществляется на свободной основе — любой открывший страницу приложения видит все публичные сообщения и может взаимодействовать с интерфейсом в режиме read-only;

[done] •	чтобы получить возможность отправлять сообщения необходимо выполнить вход в чат. Для этого достаточно ввести любое уникальное имя в форму входа. Никаких других данных не требуется;

[done] •	отправка и отображение сообщений:

[done] •	сообщение может быть адресовано любому пользователю (присутствующему в чате) или же без конкретной адресации (доступно всем);

[done] •	сообщение может быть как публичным, так и приватным — отображается только для получателя и отправителя;

[done] •	приватным сообщение может быть только при наличии получателя;

[done] •	на любое сообщение в чате можно отправить ответное сообщение;

[done] •	при ответе на приватное сообщение, сообщение пользователя также автоматически определяется как приватное;

[done] •	текст сообщения автоматически дополняется префиксом состоящим из обращения по имени к получателю, если таковой имеется;

[done] •	каждое сообщение в чате идентифицируется именем отправителя;

[done] •	при клике на имя получателя или отправителя, оно подставляется в поле ввода сообщения в качестве текущего получателя; если кликнули на имя в публичном сообщении, то ответ будет публичным; если кликнули на имя в приватном сообщении, то ответ будет приватным.

[done] •	при открытии чата отображаются последние 10 сообщений;

[done] •	при открытии чата отображаются все присутствующие (панель активных пользователей);

[in progress] •	при отсутствии соединения с сервером (обрыв связи), отправленное сообщение как и в случае наличия соединения добавляется в окно сообщений, но находится в статусе «отправляется» пока соединение не восстановится.

// пункты были тут изначально, договорился их не делать
•	отображать в чате статус «#{ИМЯ} пишет сообщение...»;
•	свои сообщения можно редактировать в течение одной минуты с момента публикации;

Стек технологий:
•	React JS в качестве View
•	графика, при ее наличии, только в SVG формате;
•	также допускается использование любых других технологий для выполнения задания
•	плюсом будет использование Redux для хранения состояний (но необязательно)

Какие подходы в реализации мы высоко оценим:
•	слабое связывание;
•	flexbox верстку.

Что мы ожидаем получить на выходе:
•	приложение в git репозитории;
•	инструкция в виде списка шагов по процессу разворота приложения;
•	первый и второй пункт письмом на почту указанную в шапке документа.

Важные комментарии к этому тестовому заданию:

•	кому-то объем данного задания может показаться излишний для тестового, в некотором смысле мы согласны с этим утверждением и такой объем функционала был выбран не случайно и не в результате ошибки — наша основная цель увидеть те направления в процессе разработки, которые даются кандидату наиболее легко, чтобы как можно точнее оценить не только наличие тех или иных знаний, но и практический опыт их применения;

•	конечно, мы бы хотели получить от вас в ответ на это тестовое задание 100% реализацию требований, но это вовсе не обязательно, если вы понимаете, что охватить весь предложенный функционал в разумные сроки у вас не получится (в виду любых возможных обстоятельств), выберите комфортный для вас набор из списка требований — уверяем, это никаких не скажется на конечной оценке задания;

•	при выполнении тестового задания подумайте о компромиссе между объемом работ и временем, требуемым для его выполнения. Мы советуем подумать о том, что является MVP для данного задания

•	в виду того, что это тестовое задание, мы советуем не обращать внимание на достижение полной кроссбраузерности и ориентироватьcя на последние версии Google Chrome.
